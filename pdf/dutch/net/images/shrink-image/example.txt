//ExStart
//ExSummaryDeze code toont aan hoe een PDF-document te optimaliseren door het comprimeren van zijn afbeeldingen. Het laadt een PDF, past optimalisatie-opties toe om de afbeeldingsgroottes te verminderen, en slaat het bijgewerkte document op.
//ExStepSummary:0: Deze stap initialiseert het pad naar de documentenmap.
//ExStepSummary:1: Deze stap opent het gespecificeerde PDF-document voor optimalisatie.
//ExStepSummary:2: Deze stap initialiseert de optimalisatieopties voor het PDF-document.
//ExStepSummary:3: Deze stap stelt de optie voor beeldcompressie op waar.
//ExStepSummary:4: Deze stap stelt de beeldkwaliteit op 50 in.
//ExStepSummary:5: Deze stap optimaliseert het PDF-document met behulp van de gespecificeerde optimalisatieopties.
//ExStepSummary:6: Deze stap werkt het pad voor het geoptimaliseerde PDF-document op.
//ExStepSummary:7: Deze stap slaat het geoptimaliseerde PDF-document op het gespecificeerde pad.
//ExStepImage:5:images/1.png

//ExStep:0-
// Pad naar de documentenmap
string dataDir = "Your Document Directory";

//ExStep:1-
// Open het PDF-document
Document pdfDocument = new Document(dataDir + "Shrinkimage.pdf");

//ExStep:2-
// Optimalisatie-opties initialiseren
var optimizeOptions = new Pdf.Optimization.OptimizationOptions();

//ExStep:3-
// Beeldcompressie inschakelen
optimizeOptions.ImageCompressionOptions.CompressImages = true;

//ExStep:4-
// Stel de beeldkwaliteit op 50%
optimizeOptions.ImageCompressionOptions.ImageQuality = 50;

//ExStep:5-
// Het PDF-document optimaliseren met behulp van de instellingen
pdfDocument.OptimizeResources(optimizeOptions);

//ExStep:6-
// De output pad voor de geoptimaliseerde PDF definiÃ«ren
dataDir = dataDir + "Shrinkimage_out.pdf";

//ExStep:7-
// Bewaar het bijgewerkte document
pdfDocument.Save(dataDir);
// Bevestigingsbericht voor de uitgang
Console.WriteLine("\nImage shrunk successfully.\nFile saved at " + dataDir);
//ExEnd