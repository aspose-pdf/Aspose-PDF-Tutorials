//ExStart
//ExSummary: This code demonstrates how to optimize a PDF document by compressing and resizing images within it.
//ExStepSummary:0: The following code initializes the current time and sets the document directory path.
//ExStepSummary:1: The following code opens the specified PDF document for processing.
//ExStepSummary:2: The following code initializes the optimization options for the PDF.
//ExStepSummary:3: The following code configures the image compression settings, including compression and quality.
//ExStepSummary:4: The following code applies the optimization options to the PDF document.
//ExStepSummary:5: The following code saves the optimized PDF document to a new file.
//ExStepImage:4:images/1.png
//ExStep:0-
// Initialize Time
var time = DateTime.Now.Ticks;
// The path to the documents directory.
string dataDir = "Your Document Directory";

//ExStep:1-
// Open document
Document pdfDocument = new Document(dataDir + "ResizeImage.pdf");

//ExStep:2-
// Initialize OptimizationOptions
var optimizeOptions = new Pdf.Optimization.OptimizationOptions();

//ExStep:3-
// Set CompressImages option
optimizeOptions.ImageCompressionOptions.CompressImages = true;
// Set ImageQuality option 
optimizeOptions.ImageCompressionOptions.ImageQuality = 75;
// Set ResizeImage option
optimizeOptions.ImageCompressionOptions.ResizeImages = true; 
// Set MaxResolution option
optimizeOptions.ImageCompressionOptions.MaxResolution = 300; 

//ExStep:4-
// Optimize PDF document using OptimizationOptions
pdfDocument.OptimizeResources(optimizeOptions); 

//ExStep:5-
// Update the data directory for the output file
dataDir = dataDir + "ResizeImages_out.pdf"; 
// Save updated document
pdfDocument.Save(dataDir); 

//ExStep:6-
// Inform user of success
Console.WriteLine("\nImage resized successfully.\nFile saved at " + dataDir);
//ExEnd