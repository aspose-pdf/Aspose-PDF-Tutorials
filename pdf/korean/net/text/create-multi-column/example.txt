//ExStart
//ExSummary: 이 코드는 Aspose.PDF 라이브러리를 사용하여 다중 열 PDF 문서를 만드는 방법을 보여줍니다. 이 문서는 마진을 설정하고 HTML 포맷으로 텍스트를 추가하고 콘텐츠를 열로 정리합니다.
//ExStepSummary:0: 이 단계는 문서 디렉토리를 설정하고 새로운 PDF 문서를 초기화하고 페이지 마진을 구성합니다.
//ExStepSummary:1: 이 단계는 문서에 새 페이지를 추가하고 그래프와 라인 클래스를 사용하여 수평선을 그리는 것입니다.
//ExStepSummary:2: 이 단계는 HtmlFragment를 포맷된 텍스트로 만들고 PDF 문서에 추가합니다.
//ExStepSummary:3: 이 단계에서는 두 열의 레이아웃을 위한 FloatingBox를 만들고, 작성자 정보를 추가합니다.
//ExStepSummary:4: 이 단계에서는 시각적인 분리를 위해 FloatingBox 내부에 또 다른 수평선을 그리는 것입니다.
//ExStepSummary:5: 이 단계는 플로팅박스에 긴 텍스트 조각을 추가하여 여러 열에 있는 콘텐츠 분포를 보여줍니다.
//ExStepSummary:6: 이 단계에서는 문서를 지정된 출력 경로로 저장하고 성공 메시지를 인쇄합니다.
//ExStepImage:2:images/1.png
//ExStepImage:5:images/2.png
//ExStep:0-
// 문서 디렉토리 경로를 정의
string dataDir = "Your Document Directory";
// 새 문서 인스턴스를 생성합니다
Document doc = new Document(); 

// PDF 파일의 왼쪽 변수 정보를 지정합니다
doc.PageInfo.Margin.Left = 40; 
// PDF 파일의 오른쪽 변수 정보를 지정
doc.PageInfo.Margin.Right = 40;
// 문서에 새 페이지를 추가
Page page = doc.Pages.Add(); 

//ExStep:1-
// 선을 그리기 위해 새로운 그래프 객체를 생성합니다
Aspose.Pdf.Drawing.Graph graph1 = new Aspose.Pdf.Drawing.Graph(500.0, 2.0);
// 섹션 객체의 섹션 컬렉션에 줄을 추가
page.Paragraphs.Add(graph1);

// 직선의 좌표를 지정합니다
// 직선의 시작점과 끝점을 정의합니다.
float[] posArr = new float[] { 1, 2, 500, 2 };
// 지정된 좌표로 선 모양을 생성
Aspose.Pdf.Drawing.Line l1 = new Aspose.Pdf.Drawing.Line(posArr);
// 그래프에 선 모양을 추가
graph1.Shapes.Add(l1); 

//ExStep:2-
// html 태그를 포함하는 텍스트로 문자열 변수를 생성
string s = "<font face=\"Times New Roman\" size=4>" +

"<strong> How to Steer Clear of money scams</<strong> "
+ "</font>";
// 헤더 텍스트에 HtmlFragment을 생성
HtmlFragment heading_text = new HtmlFragment(s);
// 페이지에 제목 텍스트를 추가 
page.Paragraphs.Add(heading_text);

//ExStep:3-
// 다중 열 레이아웃을 위한 새로운 FloatingBox을 생성
Aspose.Pdf.FloatingBox box = new Aspose.Pdf.FloatingBox();
// 열 수를 2로 설정합니다
box.ColumnInfo.ColumnCount = 2; 
// 열 사이의 간격을 설정
box.ColumnInfo.ColumnSpacing = "5";
// 각 열의 너비 설정
box.ColumnInfo.ColumnWidths = "105 105";
// 작성자 정보에 대한 텍스트 단편을 생성
TextFragment text1 = new TextFragment("By A Googler (The Official Google Blog)");
// 텍스트의 글꼴 크기를 설정
text1.TextState.FontSize = 8;
// 텍스트에 대한 줄 간격을 설정
text1.TextState.LineSpacing = 2;
// 화상 상자에 저작자 텍스트를 추가
box.Paragraphs.Add(text1);
// 텍스트의 글꼴 크기를 업데이트
text1.TextState.FontSize = 10;
// 서체 스타일을 우편으로 설정합니다
text1.TextState.FontStyle = FontStyles.Italic;

//ExStep:4-
// 두 번째 줄을 그리기 위해 다른 그래프 객체를 생성합니다
Aspose.Pdf.Drawing.Graph graph2 = new Aspose.Pdf.Drawing.Graph(50.0, 10.0);
// 직선의 좌표를 지정합니다
float[] posArr2 = new float[] { 1, 10, 100, 10 };
Aspose.Pdf.Drawing.Line l2 = new Aspose.Pdf.Drawing.Line(posArr2); 
// 그래프에 두 번째 줄 모양을 추가
graph2.Shapes.Add(l2);

// 섹션 객체의 섹션 컬렉션에 줄을 추가
box.Paragraphs.Add(graph2);

//ExStep:5-
// 기둥에서 내용을 표시하기 위해 긴 텍스트 단편을 생성
TextFragment text2 = new TextFragment(@"Sed augue tortor, sodales id, luctus et, pulvinar ut, eros. Suspendisse vel dolor. 
    Sed quam. Curabitur ut massa vitae eros euismod aliquam. Pellentesque sit amet elit. Vestibulum interdum 
    pellentesque augue. Cras mollis arcu sit amet purus. Donec augue. Nam mollis tortor a elit. Nulla viverra 
    nisl vel mauris. Vivamus sapien. nascetur ridiculus mus. Nam justo lorem, aliquam luctus, sodales et, 
    semper sed, enim Nam justo lorem, aliquam luctus, sodales et, nAenean posuere ante ut neque. 
    Morbi sollicitudin congue felis. Praesent turpis diam, iaculis sed, pharetra non, mollis ac, mauris. 
    Phasellus nisi ipsum, pretium vitae, tempor sed, molestie eu, dui. Duis lacus purus, tristique ut, 
    iaculis cursus, tincidunt vitae, risus. Sed commodo. *** sociis natoque penatibus et magnis dis 
    parturient montes, nascetur ridiculus mus. Nam justo lorem, aliquam luctus, sodales et, semper sed, 
    enim Nam justo lorem, aliquam luctus, sodales et, semper sed, enim Nam justo lorem, aliquam luctus, 
    sodales et, semper sed, enim nAenean posuere ante ut neque. Morbi sollicitudin congue felis. 
    Praesent turpis diam, iaculis sed, pharetra non, mollis ac, mauris. Phasellus nisi ipsum, pretium 
    vitae, tempor sed, molestie eu, dui. Duis lacus purus, tristique ut, iaculis cursus, tincidunt vitae, 
    risus. Sed commodo. *** sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. 
    Sed urna. Duis convallis ultrices nisi. Maecenas non ligula. Nunc nibh est, tincidunt in, placerat 
    sit amet, vestibulum a, nulla. Praesent porttitor turpis eleifend ante. Morbi sodales."
);
// 부동함수 상자에 긴 텍스트를 추가
box.Paragraphs.Add(text2); 
// 페이지에 모든 내용을 포함하는 부동 상자를 추가
page.Paragraphs.Add(box); 
//ExStep:6-
// 출력 PDF 파일 경로를 지정
dataDir = dataDir + "CreateMultiColumnPdf_out.pdf";
// 문서를 지정된 경로로 저장
doc.Save(dataDir); 
// 인쇄 성공 메시지
Console.WriteLine("\nMulti-column PDF file created successfully.\nFile saved at " + dataDir); 
//ExEnd