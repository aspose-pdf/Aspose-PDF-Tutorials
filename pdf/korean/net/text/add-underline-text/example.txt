//ExStart
//ExSummary: 이 코드 는 PDF 문서 를 생성 하고 하부 문장 형식 을 가진 텍스트 단편 을 추가 하는 방법 을 설명 합니다. 문서 를 생성 하고 텍스트 를 추가 하고 파일을 저장 하는 단계 를 포함 합니다.
//ExStepSummary:0: PDF 문서가 저장될 디렉토리를 정의합니다.
//ExStepSummary:1: 새 PDF 문서를 초기화하고 페이지를 추가합니다.
//ExStepSummary:2: 문서의 첫 페이지에 텍스트 빌더 객체를 생성합니다.
//ExStepSummary:3: 테스트 메시지와 함께 TextFragment를 생성하고, 글꼴을 Arial로 설정하고, 크기를 10로 설정하고, 하부 포맷을 활성화합니다.
//ExStepSummary:4: PDF에서 TextFragment의 위치를 지정하고 TextBuilder에 첨부합니다.
//ExStepSummary:5: 출력 파일 경로를 정의하고 PDF 문서를 저장합니다.
//ExStepSummary:6: 하부 문자를 추가한 것을 표시하는 성공 메시지를 출력하고 파일 위치를 표시합니다.
//ExStepImage:4:images/1.png
//ExStep:0-
// 문서가 저장될 디렉토리를 정의합니다.
string dataDir = "Your Document Directory";

//ExStep:1-
// 새 PDF 문서를 초기화합니다.
Document pdfDocument = new Document();
// 문서에 새 페이지를 추가합니다.
pdfDocument.Pages.Add(); 

//ExStep:2-
// 첫 페이지에 텍스트 빌더를 만들자.
TextBuilder tb = new TextBuilder(pdfDocument.Pages[1]);

//ExStep:3-
// 지정된 텍스트로 TextFragment을 생성합니다.
TextFragment fragment = new TextFragment("Test message");
// 글꼴을 아리얼으로 설정해
fragment.TextState.Font = FontRepository.FindFont("Arial");
// 글꼴 크기를 10으로 설정하세요.
fragment.TextState.FontSize = 10;
// 텍스트를 하부하는 형식을 활성화합니다.
fragment.TextState.Underline = true;

//ExStep:4-
// PDF에서 TextFragment의 위치를 지정합니다.
fragment.Position = new Position(10, 800);
// TextFragment를 TextBuilder에 첨부합니다.
tb.AppendText(fragment);

//ExStep:5-
// PDF의 출력 파일 경로를 정의합니다.
dataDir = dataDir + "AddUnderlineText_out.pdf";
// 문서를 지정된 경로로 저장합니다.
pdfDocument.Save(dataDir);

//ExStep:6-
// 출력 성공 메시지
Console.WriteLine("\nUnderline text added successfully.\nFile saved at " + dataDir);
//ExEnd