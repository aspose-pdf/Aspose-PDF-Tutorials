//ExStart
//ExSummary: 这个代码展示了如何使用Aspose.PDF创建一个PDF文档,添加一个带有特定边框样式的表格,并在一定数量的行后实现排列.
//ExStepSummary:0: 这一步初始化文档并添加一个页面.
//ExStepSummary:1: 这一步创建了一个表实例并设置边框样式.
//ExStepSummary:2: 这一步指定了表的列宽度.
//ExStepSummary:3: 这一步将增加200行,每个行包含两个单元格.
//ExStepSummary:4: 这一步检查是否添加了10行,如果是这样,则移动到新页面.
//ExStepSummary:5: 这一步将完成的表添加到PDF文档页面并保存.
//ExStepImage:2:images/1.png
//ExStepImage:5:images/2.png

//ExStep:0-
// 文件目录的路径
string dataDir = "Your Document Directory";

// 实例文件实例
Document doc = new Document();

// 添加页面到页面的PDF文件集合
doc.Pages.Add();

//ExStep:1-
// 创建表实例
Aspose.Pdf.Table tab = new Aspose.Pdf.Table();

// 设置表边框样式
tab.Border = new Aspose.Pdf.BorderInfo(Aspose.Pdf.BorderSide.All, Aspose.Pdf.Color.Red);

// 设置边框颜色为红色的表格的默认边框样式
tab.DefaultCellBorder = new Aspose.Pdf.BorderInfo(Aspose.Pdf.BorderSide.All, Aspose.Pdf.Color.Red);

//ExStep:2-
// 指定表列的宽度 (2个列,每个为100个单位)
tab.ColumnWidths = "100 100";

//ExStep:3-
// 创建一个循环,为表添加200行
for (int counter = 0; counter <= 200; counter++)
{
	// 创建一个新行
    Aspose.Pdf.Row row = new Aspose.Pdf.Row();
	// 添加行到表格
    tab.Rows.Add(row); 

    // 创建第一个单元格并添加文本
    Aspose.Pdf.Cell cell1 = new Aspose.Pdf.Cell();
	// 添加文本片段到第一个单元格	
    cell1.Paragraphs.Add(new TextFragment("Cell " + counter + ", 0")); 
	// 添加第一个单元格到行
    row.Cells.Add(cell1); 

    // 创建第二个单元格并添加文本
    Aspose.Pdf.Cell cell2 = new Aspose.Pdf.Cell();
	// 添加文本片段到第二个单元格	
    cell2.Paragraphs.Add(new TextFragment("Cell " + counter + ", 1"));
	// 添加第二个单元格到行
    row.Cells.Add(cell2); 
    
//ExStep:4-
    // 当添加10行时,在新页面中染新行
    if (counter % 10 == 0 && counter != 0) 
        row.IsInNewPage = true; // Move row to a new page if the condition is met
}

//ExStep:5-
// 添加表格到第一个页面的段落集合
doc.Pages[1].Paragraphs.Add(tab); 
// 定义输出文件路径
dataDir = dataDir + "InsertPageBreak_out.pdf";
// 保存PDF文档
doc.Save(dataDir); 
// 确认消息
Console.WriteLine("\nPage break inserted successfully.\nFile saved at " + dataDir); 
//ExEnd
