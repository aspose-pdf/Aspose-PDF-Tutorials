//ExStart
//ExSummary: 这个代码说明如何创建一个用表的PDF文档.表被添加到现有的PDF文档的第二页,并包含指定数量的行和列数据.
//ExStepSummary:0: 这一步初始化处理的 PDF 文件的文件路径.
//ExStepSummary:1: 这一步将从指定目录中加载现有的 PDF 文档.
//ExStepSummary:2: 这个步骤创建一个新的表实例并设置边界属性.
//ExStepSummary:3: 这一步初始化循环,将多行添加到表中,填充每个单元格数据.
//ExStepSummary:4: 这一步将创建的表添加到PDF文档的第一页.
//ExStepSummary:5: 这一步将更新的 PDF 文档和新添加的表格保存到指定输出路径.
//ExStepImage:4:images/1.png
//ExStep:0-
// 定义文档的路径
string dataDir = "Your Document Directory";

//ExStep:1-
// 载入源文件
Aspose.Pdf.Document doc = new Aspose.Pdf.Document(dataDir + "AddTable.pdf");

//ExStep:2-
// 启动一个新的表实例
Aspose.Pdf.Table table = new Aspose.Pdf.Table();
// 设置表边框颜色为光灰色
table.Border = new Aspose.Pdf.BorderInfo(Aspose.Pdf.BorderSide.All, .5f, Aspose.Pdf.Color.FromRgb(System.Drawing.Color.LightGray));
// 设置表单元格边界
table.DefaultCellBorder = new Aspose.Pdf.BorderInfo(Aspose.Pdf.BorderSide.All, .5f, Aspose.Pdf.Color.FromRgb(System.Drawing.Color.LightGray)); 

//ExStep:3-
// 循环添加10行
for (int row_count = 1; row_count < 10; row_count++) 
{
	// 添加一个新行到表格
    Aspose.Pdf.Row row = table.Rows.Add(); 
	// 在行中添加第一个单元格
    row.Cells.Add("Column (" + row_count + ", 1)"); 
	// 在行中添加第二个单元格
    row.Cells.Add("Column (" + row_count + ", 2)"); 
	// 在行中添加第三个单元格
    row.Cells.Add("Column (" + row_count + ", 3)"); 
}

//ExStep:4-
// 将表对象添加到输入文档的第一个页面
doc.Pages[1].Paragraphs.Add(table);

//ExStep:5-
// 定义更新文档的输出文件路径
dataDir = dataDir + "document_with_table_out.pdf"; 
// 保存包含表格的更新文档
doc.Save(dataDir); 
// 通知用户成功操作
Console.WriteLine("\nText added successfully to an existing pdf file.\nFile saved at " + dataDir);
//ExEnd