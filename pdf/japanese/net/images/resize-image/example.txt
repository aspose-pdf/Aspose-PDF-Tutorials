//ExStart
//ExSummary: このコードでは,PDF文書内の画像を圧縮し,サイズを変更することによって,それを最適化する方法を示します.
//ExStepSummary:0: 次のコードは現在の時間を初期化し,ドキュメントディレクトリ経路を設定します.
//ExStepSummary:1: 次のコードで指定された PDF 文書を処理するために開きます.
//ExStepSummary:2: 次のコードで PDF の最適化オプションを初期化します
//ExStepSummary:3: 次のコードでは,圧縮と品質を含む画像圧縮設定を設定します.
//ExStepSummary:4: 次のコードは,PDF文書に最適化オプションを適用します.
//ExStepSummary:5: 次のコードで,最適化された PDF 文書を新しいファイルに保存します.
//ExStepImage:4:images/1.png
//ExStep:0-
// 初期化する時間
var time = DateTime.Now.Ticks;
// 文書ディレクトリへのパスです
string dataDir = "Your Document Directory";

//ExStep:1-
// 公開文書
Document pdfDocument = new Document(dataDir + "ResizeImage.pdf");

//ExStep:2-
// 初期化 OptimizationOptions
var optimizeOptions = new Pdf.Optimization.OptimizationOptions();

//ExStep:3-
// 圧縮画像オプションを設定
optimizeOptions.ImageCompressionOptions.CompressImages = true;
// ImageQuality オプションを設定 
optimizeOptions.ImageCompressionOptions.ImageQuality = 75;
// サイズ変更オプションを設定
optimizeOptions.ImageCompressionOptions.ResizeImages = true; 
// MaxResolution オプションを設定する
optimizeOptions.ImageCompressionOptions.MaxResolution = 300; 

//ExStep:4-
// OptimizationOptions を使って PDF 文書を最適化する
pdfDocument.OptimizeResources(optimizeOptions); 

//ExStep:5-
// 出力ファイルのデータディレクトリを更新する
dataDir = dataDir + "ResizeImages_out.pdf"; 
// 更新された文書を保存する
pdfDocument.Save(dataDir); 

//ExStep:6-
// ユーザに成功について知らせる
Console.WriteLine("\nImage resized successfully.\nFile saved at " + dataDir);
//ExEnd