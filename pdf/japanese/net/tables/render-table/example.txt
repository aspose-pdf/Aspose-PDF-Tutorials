//ExStart
//ExSummary: このコードでは,Aspose.Pdf を使ってテーブルを備えた PDF 文書を作成する方法を示します. 境界を設定し,異なるページに2つのテーブルを追加し,指定されたパスに文書を保存します.
//ExStepSummary:0: このステップでは,PDFファイルの出力ディレクトリを設定します.
//ExStepSummary:1: このステップでは新しい Document オブジェクトを初期化し,ページ設定を変更するために PageInfo を取得します.
//ExStepSummary:2: このステップではページの辺を設定し,ページの向きを 景観モードに変更します
//ExStepSummary:3: このステップでは新しいテーブルオブジェクトを作成し,列幅を定義します.
//ExStepSummary:4: このステップでは,ドキュメントに新しいページを追加し, 120 行のテーブルを挿入し,固定行の高さを設定し,各セルにコンテンツを追加します.
//ExStepSummary:5: このステップでは,第1の表を現在のページの段落集合に追加します.
//ExStepSummary:6: このステップでは,異なる列幅を持つ別のテーブルを作成し,指定されたコンテンツの 10 行を追加します.
//ExStepSummary:7: このステップでは,新しいページに表示される第2のテーブルを設定し,ドキュメントに追加します.
//ExStepSummary:8: このステップでは,PDF文書を指定されたパスに保存し,成功メッセージを出力します.
//ExStepImage:5:images/2.png
//ExStepImage:7:images/3.png
//ExStep:0-
// 文書ディレクトリへのパスを指定する.
string dataDir = "Your Document Directory";

//ExStep:1-
// 新しい Document オブジェクトを作成します.
Document doc = new Document();
// 文書のページ情報を取得します
PageInfo pageInfo = doc.PageInfo;
// ページの辺り設定にアクセスします.
Aspose.Pdf.MarginInfo marginInfo = pageInfo.Margin;

//ExStep:2-
// 左側を37ユニットに設定
marginInfo.Left = 37;
// 右側を37ユニットに設定
marginInfo.Right = 37;
// 37ユニットに上位マージンを設定
marginInfo.Top = 37; 
// 底辺を37ユニットに設定
marginInfo.Bottom = 37;
// ページの向きを風景に設定します.
pageInfo.IsLandscape = true;

//ExStep:3-
// 新しいテーブルオブジェクトを作成します.
Aspose.Pdf.Table table = new Aspose.Pdf.Table();
// 表の列の幅を定義する.
table.ColumnWidths = "50 100";

//ExStep:4-
// 文書に新しいページを追加します.
Page curPage = doc.Pages.Add();
// ループで 120 行の表を追加します
for (int i = 1; i <= 120; i++)
{
	// 新しい列を作ります
    Aspose.Pdf.Row row = table.Rows.Add();
	// 列の固定高さ設定
    row.FixedRowHeight = 15; 
    // 列の最初のセルを作成します.
    Aspose.Pdf.Cell cell1 = row.Cells.Add(); 
	// テキストフレグメントを最初のセルに追加します.
    cell1.Paragraphs.Add(new TextFragment("Content 1")); 
    // 列の2番目のセルを作成します
    Aspose.Pdf.Cell cell2 = row.Cells.Add(); 
	// テキストフレグメントを2番目のセルに追加します.
    cell2.Paragraphs.Add(new TextFragment("HHHHH")); 
}

//ExStep:5-
// 現在のページの段落コレクションにアクセスします.
Aspose.Pdf.Paragraphs paragraphs = curPage.Paragraphs; 
// 最初の表を現在のページに追加します.
paragraphs.Add(table); 

//ExStep:6-
// 別のテーブルオブジェクトを作成します.
Aspose.Pdf.Table table1 = new Aspose.Pdf.Table();
// 第2表の列の幅を定義する.
table1.ColumnWidths = "100 100";
// ループで2番目のテーブルに 10行を追加します 
for (int i = 1; i <= 10; i++) 
{
	// 表1の新しい行を作成します.
    Aspose.Pdf.Row row = table1.Rows.Add(); 
	// 列の最初のセルを作成します.
    Aspose.Pdf.Cell cell1 = row.Cells.Add(); 
	// テキストフレグメントを最初のセルに追加します.
    cell1.Paragraphs.Add(new TextFragment("LAAAAAAA")); 
    // 列の2番目のセルを作成します
    Aspose.Pdf.Cell cell2 = row.Cells.Add(); 
	// テキストフレグメントを2番目のセルに追加します.
    cell2.Paragraphs.Add(new TextFragment("LAAGGGGGG")); 
}
// 設定プロパティで2番目のテーブルを新しいページにします.
table1.IsInNewPage = true; 
// ステップ7
// ページの段落に第2表を追加します.
paragraphs.Add(table1); 
// ファイルのパスを定義する.
dataDir = dataDir + "IsNewPageProperty_Test_out.pdf"; 
// 指定されたパスに文書を保存します.
doc.Save(dataDir); 
// ステップ8
// 送信成功
Console.WriteLine("\nTable render successfully on a page.\nFile saved at " + dataDir); 
//ExEnd